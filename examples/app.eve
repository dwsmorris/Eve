# Calculator
## Rendering
### Styling
```
search @browser
	button = [#button]
  screen = [#screen]
  body = [#body]
  
bind @browser
	button.style += [width: "50px" height: "50px"]
  screen.style += [height: "50px" width: "200px" border: "1px solid black" line-height: "50px" font-size: "30px" text-align: "right" padding-right: "10px" white-space: "nowrap" overflow: "hidden"]
```
### Calculator body
```
bind @browser
	[#div #body children:
    [#div #screen]
    [#div children:
      [#div children:
        [#span #button text: "7" type: "digit"]
        [#span #button text: "8" type: "digit"]
        [#span #button text: "9" type: "digit"]
        [#span #button text: "÷" type: "operator"]
      ]
      [#div children:
        [#span #button text: "4" type: "digit"]
        [#span #button text: "5" type: "digit"]
        [#span #button text: "6" type: "digit"]
        [#span #button text: "×" type: "operator"]
      ]
      [#div children:
        [#span #button text: "1" type: "digit"]
        [#span #button text: "2" type: "digit"]
        [#span #button text: "3" type: "digit"]
        [#span #button text: "-" type: "operator"]
      ]
      [#div children:
        [#span #button text: "0" type: "digit"]
        [#span #button text: "=" type: "evaluator"]
        [#span #button text: "C" type: "clear"]
        [#span #button text: "+" type: "operator"]
      ]
    ]
  ]
```

### Display
```
search @browser @session
	calculation = [#calculation first]
  screen = [#screen]
  operator = if calculation.operator then calculation.operator else ""
  second = if calculation.second then calculation.second else ""
  
bind @browser
	screen.text := first + operator + second
```

## Setup
```
commit
  [#calculation first: "0"]
```

## Events
### Digits
Clicking on a digit to start a calculation
```
search @browser @session @event
	[#click #direct-target element: [text type: "digit"]]
  calculation = [#calculation first not(operator)]
  newFirst = if first = "0" then text else first + text
  
commit
	calculation.first := newFirst
```

Clicking on a digit after an operator has been selected
```
search @browser @session @event
	[#click #direct-target element: [text type: "digit"]]
  calculation = [#calculation operator]
  newSecond = if calculation.second then calculation.second + text else text
  
commit
	calculation.second := newSecond
```

### Operators
Clicking on an operator after an initial number is present
```
search @browser @session @event
	[#click #direct-target element: [text type: "operator"]]
  calculation = [#calculation first not(operator)]
  
commit
	calculation.operator := text
```

### Evaluators
Clicking on the equals button
```
search @browser @session @event
	[#click #direct-target element: [type: "evaluator"]]
  [#calculation first operator second]
  
bind
	[#calculate first operator second]
```

Clicking on an operator after a second value is entered
```
search @browser @session @event
	[#click #direct-target element: [text type: "operator"]]
  calculation = [#calculation first operator second]
  
bind
	[#calculate first operator second]
  
bind @browser
	[#click #direct-target element: [text type: "operator"]]
```

### Clear
```
search @browser @session @event
	[#click #direct-target element: [type: "clear"]]
  calculation = [#calculation]
  
commit
	calculation.first := "0"
  calculation.operator := none
  calculation.second := none
```

## Calculation
```
search
	[#calculate first operator second]
  calculation = [#calculation]
  firstValue = convert[value: first to: "number"]
  secondValue = convert[value: second to: "number"]
  result = if operator = "+" then firstValue + secondValue
  					if operator = "-" then firstValue - secondValue
            if operator = "×" then firstValue * secondValue
            if operator = "÷" then firstValue / secondValue
            
commit
	calculation.first := result
	calculation.operator := none
  calculation.second := none
```
